export const SECTION_MAP = {
  handbook: [
    {
      title: 'Basics',
      slug: 'basics',
    },
    {
      title: 'Features',
      slug: 'features',
    },
    {
      title: 'Framework',
      slug: 'framework',
    },
    {
      title: 'Integration',
      slug: 'integration',
    },
  ],
  reference: [
    {
      title: 'Definitions',
      slug: 'definitions',
    },
    {
      title: 'Elements',
      slug: 'elements',
    },
    {
      title: 'Behaviors',
      slug: 'behaviors',
    },
    {
      title: 'Style attributes',
      slug: 'styles',
    },
    {
      title: 'Utility attributes',
      slug: 'utilities',
    },
    {
      title: 'Functions',
      slug: 'functions',
    },
  ],
  storybook: [
    {
      slug: 'typography',
    },
    {
      slug: 'decorations',
    },
    {
      slug: 'colors',
    },
    {
      slug: 'layouts',
    },
    {
      slug: 'widgets',
    },
    {
      slug: 'components',
    },
    {
      slug: 'converters',
    },
    {
      title: 'Dynamic properties',
      slug: 'dynamic-props',
    },
    {
      slug: 'formatting',
    },
    {
      title: 'Standalone behaviors',
      slug: 'behaviors',
    },
    {
      slug: 'complex',
    },
  ],
};

/*
How to extract all behaviors in runtime:

JSON.stringify(Object.keys(Nude.behaviors.map).map(name => {
   return name;
}));
 */

export const BEHAVIORS = [
  'focus',
  'hover',
  'listbox',
  'option',
  'active',
  'fixate',
  'orient',
  'popup',
  'control',
  'radiogroup',
  'action',
  'label',
  'code',
  'markdown',
  'datetime',
  'number',
  'slider',
  'slider2d',
  'numinput',
  'input',
  'textarea',
  'fileinput',
  'icon',
  'svg',
  'image',
  'debug',
  'debugger',
  'form',
  'validator',
  'group',
  'tooltip',
  'progressbar',
  'value',
  'datepicker',
  'dateinput',
  'inputgroup',
  'menu',
  'menuitem',
  'offset',
  'appear',
  'hotkey',
  'current',
  'movable',
];

/*
How to extract all styles in runtime:

JSON.stringify(Object.keys(Nude.styles).map(name => {
   return name;
}));
 */

export const STYLES = [
  'width',
  'height',
  'sizing',
  'radius',
  'group-radius',
  'padding',
  'overflow',
  'space',
  'border',
  'shadow',
  'flow',
  'gap',
  'order',
  'flex',
  'grow',
  'shrink',
  'basis',
  'place-content',
  'place-items',
  'content',
  'items',
  'areas',
  'columns',
  'rows',
  'column',
  'row',
  'area',
  'contain',
  'place',
  'z',
  'interactive',
  'color',
  'fill',
  'filter',
  'backdrop-filter',
  'image',
  'transform',
  'scale',
  'rotate',
  'move',
  'text',
  'cursor',
  'size',
  'hide',
  'show',
  'opacity',
  'transition',
  'scrollbar',
  'before',
  'after',
  'inset',
  'outline',
  'mark',
  'expand',
  'fade',
  'drop',
  'origin',
  'selectable',
  'box',
  'line-clamp',
  'snap',
  'snapping',
  'font',
  'clip',
];

/*
How to extract elements data in runtime:

JSON.stringify(Object.values(Nude.elements).map(el => {
   return {
     tag: el.nuTag, type: (el.nuParentClass.nuTag === 'nu-definition') ? 'definition' : 'element',
     styles: el.nuAllStyles,
     attrs: el.nuAllAttrs,
     context: el.nuAllContext,
     role: el.nuRole,
     contents: el.nuContents,
     css: el.nuExtractCSS(el, el.nuTag),
     template: el.nuCachedTemplate,
     behaviors: el.nuAllBehaviors,

  }
}));
 */

export const ELEMENTS = [
  {
    tag: 'nu-root',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      text: 'n',
      font: 'Quicksand',
      size: 'md',
      '--normal-font-weight': '500',
      '--semi-bold-font-weight': '600',
      '--bold-font-weight': '700',
      '--xxs-line-height': '20rp',
      '--xs-line-height': '20rp',
      '--sm-line-height': '24rp',
      '--md-line-height': '26rp',
      '--lg-line-height': '30rp',
      '--xl-line-height': '34rp',
      '--xxl-line-height': '38rp',
    },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-root::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-grid',
    type: 'element',
    styles: { display: 'grid', sizing: 'border', flow: 'grid-row' },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-grid::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-flow',
    type: 'element',
    styles: { display: 'block', sizing: 'border', flow: 'column' },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-flow::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-el',
    type: 'element',
    styles: { display: 'inline-block', sizing: 'border' },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-el::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-block',
    type: 'element',
    styles: { display: 'block', sizing: 'border' },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-block::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-flex',
    type: 'element',
    styles: { display: 'flex', sizing: 'border', flow: 'row', gap: '0' },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-flex::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-card',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      flow: 'column',
      box: 'y',
      padding: '2x',
      fill: '#bg :clear[#clear]',
      color: '#text :clear[current]',
      border: '1bw :clear[0]',
      radius: '1r',
      transition: 'theme, radius',
      shadow: '0 :clear[0 1x 4x #shadow.33]',
    },
    attrs: {},
    context: {},
    role: 'region',
    contents: '',
    css: [
      'nu-card::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-pane',
    type: 'element',
    styles: {
      display: 'flex',
      sizing: 'border',
      flow: 'row',
      gap: '',
      items: 'center',
    },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-pane::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-nav',
    type: 'element',
    styles: {
      display: 'flex',
      sizing: 'border',
      flow: 'row',
      gap: '',
      items: 'center',
    },
    attrs: {},
    context: {},
    role: 'navigation',
    contents: '',
    css: [
      'nu-nav::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-aside',
    type: 'element',
    styles: { display: 'block', sizing: 'border', flow: 'column', box: 'y' },
    attrs: {},
    context: {},
    role: 'complementary',
    contents: '',
    css: [
      'nu-aside::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-article',
    type: 'element',
    styles: { display: 'block', sizing: 'border', flow: 'column', box: 'y' },
    attrs: {},
    context: {},
    role: 'article',
    contents: '',
    css: [
      'nu-article::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-main',
    type: 'element',
    styles: { display: 'block', sizing: 'border', flow: 'column', box: 'y' },
    attrs: {},
    context: {},
    role: 'main',
    contents: '',
    css: [
      'nu-main::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-section',
    type: 'element',
    styles: { display: 'block', sizing: 'border', flow: 'column', box: 'y' },
    attrs: {},
    context: {},
    role: 'region',
    contents: '',
    css: [
      'nu-section::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-region',
    type: 'element',
    styles: { display: 'block', sizing: 'border', flow: 'column', box: 'y' },
    attrs: {},
    context: {},
    role: 'region',
    contents: '',
    css: [
      'nu-region::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-header',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      flow: 'column',
      box: 'y',
      fill: '#bg',
      z: 'front',
      transition: 'all',
    },
    attrs: {},
    context: {},
    role: 'banner',
    contents: '',
    css: [
      'nu-header::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-footer',
    type: 'element',
    styles: { display: 'block', sizing: 'border', flow: 'column', box: 'y' },
    attrs: {},
    context: {},
    role: 'contentinfo',
    contents: '',
    css: [
      'nu-footer::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-status',
    type: 'element',
    styles: { display: 'inline-block', sizing: 'border' },
    attrs: { 'aria-live': 'polite' },
    context: {},
    role: 'status',
    contents: '',
    css: [
      'nu-status::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-line',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      place: 'stretch',
      orient: 'h',
      size: '1bw',
      fill: 'var(--local-border-color, var(--border-color)) :special[special]',
      text: 'v-middle',
      box: 'y',
      transition: 'fill',
    },
    attrs: {},
    context: {},
    role: 'separator',
    contents: '',
    css: [
      'nu-line::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-line {\n        line-height: 0 !important;\n      }',
    ],
    template: '',
    behaviors: { orient: true },
  },
  {
    tag: 'nu-in',
    type: 'element',
    styles: { display: 'inline', sizing: 'border' },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-in::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-strong',
    type: 'element',
    styles: { display: 'inline', sizing: 'border', text: 'bold' },
    attrs: {},
    context: {},
    role: 'strong',
    contents: '',
    css: [
      'nu-strong::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-em',
    type: 'element',
    styles: { display: 'inline', sizing: 'border', text: 'i' },
    attrs: {},
    context: {},
    role: 'emphasis',
    contents: '',
    css: [
      'nu-em::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-sup',
    type: 'element',
    styles: {
      display: 'inline',
      sizing: 'border',
      text: 'sup',
      size: '.75em 1em',
    },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-sup::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-sub',
    type: 'element',
    styles: {
      display: 'inline',
      sizing: 'border',
      text: 'sub',
      size: '.75em 1em',
    },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-sub::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-contents',
    type: 'element',
    styles: { display: 'inline-block', sizing: 'border' },
    attrs: {},
    context: {},
    role: '',
    contents: '*',
    css: [
      'nu-contents::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-heading',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      level: 2,
      color: 'var(--local-text-color, var(--text-soft-color))',
      text: 'heading',
    },
    attrs: { level: 2 },
    context: {},
    role: 'heading',
    contents: '',
    css: [
      'nu-heading::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-h1',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      level: 1,
      color: 'var(--local-text-color, var(--text-soft-color))',
      text: 'heading',
    },
    attrs: { level: 1 },
    context: {},
    role: 'heading',
    contents: '',
    css: [
      'nu-h1::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-h2',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      level: 2,
      color: 'var(--local-text-color, var(--text-soft-color))',
      text: 'heading',
    },
    attrs: { level: 2 },
    context: {},
    role: 'heading',
    contents: '',
    css: [
      'nu-h2::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-h3',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      level: 3,
      color: 'var(--local-text-color, var(--text-soft-color))',
      text: 'heading',
    },
    attrs: { level: 3 },
    context: {},
    role: 'heading',
    contents: '',
    css: [
      'nu-h3::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-h4',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      level: 4,
      color: 'var(--local-text-color, var(--text-soft-color))',
      text: 'heading',
    },
    attrs: { level: 4 },
    context: {},
    role: 'heading',
    contents: '',
    css: [
      'nu-h4::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-h5',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      level: 5,
      color: 'var(--local-text-color, var(--text-soft-color))',
      text: 'heading',
    },
    attrs: { level: 5 },
    context: {},
    role: 'heading',
    contents: '',
    css: [
      'nu-h5::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-h6',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      level: 6,
      color: 'var(--local-text-color, var(--text-soft-color))',
      text: 'heading',
    },
    attrs: { level: 6 },
    context: {},
    role: 'heading',
    contents: '',
    css: [
      'nu-h6::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-description',
    type: 'element',
    styles: { display: 'block', sizing: 'border' },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-description::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-spacer',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      width: 'min 1fs',
      height: 'min 1fs',
      basis: '1fs',
      size: '1x',
    },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-spacer::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-icon',
    type: 'element',
    styles: {
      display: 'inline-block',
      sizing: 'content',
      width: 'min 1fs',
      height: 'min 1lh',
      size: '@icon-size',
      transition: 'transform',
      box: 'y',
      text: 'middle',
    },
    attrs: {},
    context: {},
    role: 'img',
    contents: '',
    css: [
      'nu-icon::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-icon svg {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        width: var(--font-size);\n        height: var(--font-size);\n        transform: translate(-50%, -50%);\n        transition: opacity calc(var(--transition-enabler) * var(--opacity-transition, var(--transition))) linear;\n      }',
    ],
    template: '',
    behaviors: { icon: true },
  },
  {
    tag: 'nu-dropdownicon',
    type: 'element',
    styles: {
      display: 'inline-block',
      sizing: 'content',
      width: 'min 1fs',
      height: 'min 1lh',
      size: '@icon-size',
      transition: 'transform',
      box: 'y',
      text: 'middle',
      scale: '^parent:pressed[flip-y]',
      space: '^parent:action[.5em left right] 0',
      color: '^parent #special :special[#special-text]',
    },
    attrs: { name: 'chevron-down' },
    context: {},
    role: 'img',
    contents: '',
    css: [
      'nu-dropdownicon::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-dropdownicon svg {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        width: var(--font-size);\n        height: var(--font-size);\n        transform: translate(-50%, -50%);\n        transition: opacity calc(var(--transition-enabler) * var(--opacity-transition, var(--transition))) linear;\n      }',
    ],
    template: '',
    behaviors: { icon: true },
  },
  {
    tag: 'nu-table',
    type: 'element',
    styles: { display: 'table', sizing: 'border', gap: '0' },
    attrs: {},
    context: {},
    role: 'table',
    contents: '',
    css: [
      'nu-table::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-gridtable',
    type: 'element',
    styles: {
      display: 'grid',
      sizing: 'border',
      flow: 'grid-row',
      width: 'min-content',
      color: '',
      overflow: 'auto',
      padding: '1x',
    },
    attrs: {},
    context: { 'attrs:cell': { shadow: '0 1bw 0 #border' } },
    role: 'table',
    contents: '',
    css: [
      'nu-gridtable::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-row',
    type: 'element',
    styles: {
      display: 'table-row',
      sizing: 'border',
      shadow: '0 1px 0 #border',
    },
    attrs: {},
    context: {},
    role: 'row',
    contents: '',
    css: [
      'nu-row::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-rowgroup',
    type: 'element',
    styles: { display: 'table-row-group', sizing: 'border' },
    attrs: {},
    context: {},
    role: 'rowgroup',
    contents: '',
    css: [
      'nu-rowgroup::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-cell',
    type: 'element',
    styles: {
      display: '^ block :role-row[table-cell]',
      sizing: 'border',
      padding: '1x',
      text: 'middle',
      box: 'y',
    },
    attrs: {},
    context: {},
    role: 'cell',
    contents: '',
    css: [
      'nu-cell::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-tableheader',
    type: 'element',
    styles: {
      display: '^ block :role-row[table-cell]',
      sizing: 'border',
      padding: '1x',
      text: 'bold middle',
      box: 'y',
    },
    attrs: {},
    context: {},
    role: 'cell',
    contents: '',
    css: [
      'nu-tableheader::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-columnheader',
    type: 'element',
    styles: {
      display: '^ block :role-row[table-cell]',
      sizing: 'border',
      padding: '1x',
      text: 'bold middle',
      box: 'y',
    },
    attrs: {},
    context: {},
    role: 'columnheader',
    contents: '',
    css: [
      'nu-columnheader::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-rowheader',
    type: 'element',
    styles: {
      display: '^ block :role-row[table-cell]',
      sizing: 'border',
      padding: '1x',
      text: 'bold middle',
      box: 'y',
    },
    attrs: {},
    context: {},
    role: 'rowheader',
    contents: '',
    css: [
      'nu-rowheader::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-field',
    type: 'element',
    styles: { display: 'block', sizing: 'border', flow: 'column' },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-field::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-group',
    type: 'element',
    styles: {
      display: 'flex',
      sizing: 'border',
      flow: 'row',
      'group-radius': '(1r - 1bw)',
      gap: '0',
      radius: '',
      border: '',
      box: 'y',
    },
    attrs: {},
    context: {},
    role: 'group',
    contents: '',
    css: [
      'nu-group::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { group: true },
  },
  {
    tag: 'nu-inputgroup',
    type: 'element',
    styles: {
      display: 'flex',
      sizing: 'border',
      flow: 'row',
      'group-radius': '(1r - 1bw)',
      gap: '0',
      radius: '',
      border: '',
      box: 'y',
      fill: '#input',
      outline: 'focus-inside',
      cursor: 'text',
    },
    attrs: {},
    context: {
      'attrs:icon': { grow: '0', $shadowRoot: null },
      'attrs:input': { border: '0', grow: '1', $shadowRoot: null },
      'attrs:btn': { padding: '', border: 'n', $shadowRoot: null },
    },
    role: 'group',
    contents: '',
    css: [
      'nu-inputgroup::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { group: true, inputgroup: true },
  },
  {
    tag: 'nu-btngroup',
    type: 'element',
    styles: {
      display: 'flex',
      sizing: 'border',
      flow: 'row',
      'group-radius': '(1r - 1bw)',
      gap: '1bw',
      radius: '',
      border: '',
      box: 'y',
      fill:
        'var(--local-border-color, var(--border-color)) :disabled[rgba(var(--local-border-color-rgb, var(--border-color-rgb)), var(--disabled-opacity))]',
      outline: 'n :radiogroup[focus-inside visible]',
      transition: 'filter, opacity',
      filter:
        'n :disabled[saturate(0.33) contrast(0.88) opacity(var(--disabled-opacity))]',
    },
    attrs: {},
    context: {
      'attrs:action': {
        border: '0',
        outline: '^btngroup focus visible :radiogroup[n]',
        padding: '1x 1.5x',
        filter: 'n',
        $shadowRoot: null,
      },
    },
    role: 'group',
    contents: '',
    css: ['nu-btngroup > *:not([grow]) {\n        flex-grow:1;\n      }'],
    template: '',
    behaviors: { group: true },
  },
  {
    tag: 'nu-radiogroup',
    type: 'element',
    styles: { display: 'flex', sizing: 'border', flow: 'row', gap: '0' },
    attrs: {},
    context: {},
    role: 'radiogroup',
    contents: '',
    css: [
      'nu-radiogroup::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { radiogroup: true, control: true },
  },
  {
    tag: 'nu-tablist',
    type: 'element',
    styles: {
      display: 'flex',
      sizing: 'border',
      flow: null,
      gap: '@local-tab-gap',
      direction: 'bottom',
    },
    attrs: {},
    context: {},
    role: 'tablist',
    contents: '',
    css: [
      'nu-tablist::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {
      radiogroup: 'item-role(tab)',
      control: true,
      orient: 'dynamic',
    },
  },
  {
    tag: 'nu-link',
    type: 'element',
    styles: {
      display: 'inline-block',
      sizing: 'border',
      radius: '.5r',
      text: 'nowrap u bold',
      transition: 'shadow, fill, color',
      outline: '#clear :focus-visible[y]',
      mark: '.25em hover',
      cursor: 'pointer',
      selectable: 'y',
      box: 'y',
      filter:
        'n :disabled[saturate(0.33) contrast(0.88) opacity(var(--disabled-opacity))]',
      'backdrop-filter': 'n :disabled[contrast(0.88)]',
      color: '#special',
    },
    attrs: {},
    context: {},
    role: 'link',
    contents: '',
    css: [
      'nu-link::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-link {\n        touch-action: manipulation;\n        -webkit-tap-highlight-color: var(--mark-color);\n      }',
      'nu-link[disabled] {\n        pointer-events: none;\n      }',
      'nu-link > a {\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        overflow: hidden;\n        cursor: inherit;\n        color: transparent;\n        text-decoration: inherit;\n        text-indent: -999rem;\n        white-space: nowrap;\n      }',
      'nu-link > a:focus {\n        outline: none;\n      }',
    ],
    template: '',
    behaviors: { control: true, action: true },
  },
  {
    tag: 'nu-blocklink',
    type: 'element',
    styles: {
      display: 'inline-block',
      sizing: 'border',
      radius: '0',
      text: 'nowrap u bold',
      transition: 'shadow, fill, color',
      outline: '#clear :focus-visible[y]',
      mark: '.25em hover',
      cursor: 'pointer',
      selectable: 'y',
      box: 'y',
      filter:
        'n :disabled[saturate(0.33) contrast(0.88) opacity(var(--disabled-opacity))]',
      'backdrop-filter': 'n :disabled[contrast(0.88)]',
      color: '#special',
      expand: '',
    },
    attrs: {},
    context: {},
    role: 'link',
    contents: '',
    css: [
      'nu-blocklink::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-blocklink {\n        touch-action: manipulation;\n        -webkit-tap-highlight-color: var(--mark-color);\n      }',
      'nu-blocklink[disabled] {\n        pointer-events: none;\n      }',
      'nu-blocklink > a {\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        overflow: hidden;\n        cursor: inherit;\n        color: transparent;\n        text-decoration: inherit;\n        text-indent: -999rem;\n        white-space: nowrap;\n      }',
      'nu-blocklink > a:focus {\n        outline: none;\n      }',
    ],
    template: '',
    behaviors: { control: true, action: true },
  },
  {
    tag: 'nu-listbox',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      flow: 'column',
      box: 'y',
      padding: '.5x',
      fill: '#bg :clear[#clear]',
      color: '#text :clear[current]',
      border: 'y :focus[y #special]',
      radius: '1r',
      transition: 'theme, radius',
      shadow: '0 :clear[0 1x 4x #shadow.33]',
      outline: 'n',
      gap: '1bw',
    },
    attrs: {},
    context: {},
    role: 'listbox',
    contents: '',
    css: [
      'nu-listbox::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { listbox: true, focus: true },
  },
  {
    tag: 'nu-popuplistbox',
    type: 'element',
    styles: {
      display: 'none :popup[block]',
      sizing: 'content',
      flow: 'column',
      box: 'y',
      padding: '.5x',
      fill: '#bg :clear[#clear]',
      color: '#text :clear[current]',
      border: 'y :focus[y #special]',
      radius: '1r',
      transition: 'opacity, transform',
      shadow: 'y',
      z: 'front',
      opacity: ':hidden[0] 1',
      interactive: 'yes :hidden[no]',
      origin: 'top',
      width: '100% 100vw :drop[@fixate-width min-content 100vw]',
      text: 'n wrap',
      cursor: 'default',
      place: 'outside-bottom left .5x 0',
      drop: '',
      selectable: 'y',
      outline: 'n',
      height: 'max 17',
      scrollbar: '',
      overflow: 'auto',
      gap: '1bw',
    },
    attrs: { effect: '' },
    context: {},
    role: 'listbox',
    contents: '',
    css: [
      'nu-popuplistbox::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { fixate: true, popup: true, listbox: true, focus: 'manual' },
  },
  {
    tag: 'nu-option',
    type: 'element',
    styles: {
      display: 'grid',
      sizing: 'border',
      padding: '1x 1.5x',
      fill: '#clear :selected.disabled[#special-bg] :disabled[#local-bg]',
      outline: 'n :current[y focus-outside visible]',
      width: '100%',
      flow: 'column',
      gap: '1x',
      content: 'center start',
      items: 'stretch',
      radius: '.5r',
      border: '0',
      color: '#text',
      transition: 'theme',
      mark: 'hover',
      filter:
        'n :disabled[saturate(0.33) contrast(0.88) opacity(var(--disabled-opacity))]',
      cursor: 'pointer :disabled[default]',
      inset:
        '.75em #shadow.0 :active[.75em #shadow.50] :selected[.75em #shadow.0] :active:selected[.75em #special-shadow.50]',
      text: 'sb nowrap',
    },
    attrs: {},
    context: {},
    role: 'option',
    contents: '',
    css: [
      'nu-option::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { option: true, active: true, hover: true },
  },
  {
    tag: 'nu-list',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      flow: 'column',
      gap: '1x',
      position: 'inside',
    },
    attrs: {},
    context: {},
    role: 'list',
    contents: '',
    css: [
      'nu-list::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-list:not([enumerate]):not([type]) {\n        list-style-type: disc;\n      }',
      'nu-list[enumerate]:not([type]) {\n        list-style-type: decimal;\n      }',
      'nu-list nu-list:not([padding]) {\n        padding-left: calc(var(--gap) * 4);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-listitem',
    type: 'element',
    styles: { display: 'list-item', sizing: 'border' },
    attrs: {},
    context: {},
    role: 'listitem',
    contents: '',
    css: [
      'nu-listitem::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-action',
    type: 'element',
    styles: {
      display: 'inline-block',
      sizing: 'border',
      radius: '0',
      text: 'nowrap',
      transition: 'theme, radius, filter',
      outline: '#clear :focus-visible[y]',
      mark: 'n :focusable[hover]',
      cursor: 'pointer :disabled[default]',
      selectable: 'y',
      box: 'y',
      filter:
        'n :disabled[saturate(0.33) contrast(0.88) opacity(var(--disabled-opacity))]',
      'backdrop-filter': 'n :disabled[contrast(0.88)]',
    },
    attrs: {},
    context: {},
    role: 'button',
    contents: '',
    css: [
      'nu-action::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-action {\n        touch-action: manipulation;\n        -webkit-tap-highlight-color: var(--mark-color);\n      }',
      'nu-action[disabled] {\n        pointer-events: none;\n      }',
      'nu-action > a {\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        overflow: hidden;\n        cursor: inherit;\n        color: transparent;\n        text-decoration: inherit;\n        text-indent: -999rem;\n        white-space: nowrap;\n      }',
      'nu-action > a:focus {\n        outline: none;\n      }',
    ],
    template: '',
    behaviors: { control: true, action: true },
  },
  {
    tag: 'nu-tab',
    type: 'element',
    styles: {
      display: 'grid',
      sizing: 'border',
      radius: '0',
      text: 'sb nowrap',
      transition: 'theme, radius, filter',
      outline: '#clear :focus-visible[y]',
      mark: null,
      cursor: 'pointer :disabled[default]',
      selectable: 'y',
      box: 'y',
      filter:
        'n :disabled[saturate(0.33) contrast(0.88) opacity(var(--disabled-opacity))]',
      'backdrop-filter': 'n :disabled[contrast(0.88)]',
      fill: '#clear',
      flow: 'column',
      gap: '1x',
      items: '@local-tab-items',
      padding: '@local-tab-padding-v @local-tab-padding-h',
      border: '0',
      expand: '@local-tab-expand-v @local-tab-expand-h',
      '@local-line-width':
        '0\n        :hover[1bw]\n        :pressed[1ow]\n        :hover:pressed[1ow]\n        :active[1ow - 1bw]\n        :active:hover[1ow - 1bw]',
    },
    attrs: {},
    context: {},
    role: 'tab',
    contents: '',
    css: [
      'nu-tab::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-tab {\n        touch-action: manipulation;\n        -webkit-tap-highlight-color: var(--mark-color);\n      }',
      'nu-tab[disabled] {\n        pointer-events: none;\n      }',
      'nu-tab > a {\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        overflow: hidden;\n        cursor: inherit;\n        color: transparent;\n        text-decoration: inherit;\n        text-indent: -999rem;\n        white-space: nowrap;\n      }',
      'nu-tab > a:focus {\n        outline: none;\n      }',
    ],
    template: '',
    behaviors: { control: true, action: true },
  },
  {
    tag: 'nu-btn',
    type: 'element',
    styles: {
      display: 'inline-grid',
      sizing: 'border',
      radius: '',
      text: 'sb nowrap',
      transition: 'theme, radius, filter',
      outline: '#clear :focus-visible[y]',
      mark: 'n :focusable[hover]',
      cursor: 'pointer :disabled[default]',
      selectable: 'y',
      box: 'y',
      filter:
        'n :disabled[saturate(0.33) contrast(0.88) opacity(var(--disabled-opacity))]',
      'backdrop-filter': 'n :disabled[contrast(0.88)]',
      padding: '1x 2x',
      border:
        '1bw :clear[hidden] :hover[1bw] :clear:hover[#mark] :special[#clear] :hover:special[#clear]',
      flow: 'column',
      gap: '1x',
      content: 'center :dropdown[stretch]',
      items: 'center stretch',
      inset:
        '#clear :active[#shadow.50] :active:special[#special-shadow.50] :pressed[y] :pressed:special[#special-shadow] :active:pressed[#shadow.50] :active:special[#special-shadow.50] :active:pressed:special[#special-shadow.50]',
      fill:
        '#bg :disabled[#bg] :special.disabled[#special-bg] :clear[#clear] :clear:disabled[#clear]',
      color:
        '#text :clear[#special] :special[#special-text] :special:clear[#special-text]',
    },
    attrs: {},
    context: {},
    role: 'button',
    contents: '',
    css: [
      'nu-btn::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-btn {\n        touch-action: manipulation;\n        -webkit-tap-highlight-color: var(--mark-color);\n      }',
      'nu-btn[disabled] {\n        pointer-events: none;\n      }',
      'nu-btn > a {\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        overflow: hidden;\n        cursor: inherit;\n        color: transparent;\n        text-decoration: inherit;\n        text-indent: -999rem;\n        white-space: nowrap;\n      }',
      'nu-btn > a:focus {\n        outline: none;\n      }',
      'nu-btn[special] {\n        --shadow-color: var(--special-shadow-color);\n        --shadow-color-rgb: var(--special-shadow-color-rgb);\n      }',
      'nu-btn[special] > :not([theme]) {\n        --text-soft-color: var(--special-text-color);\n        --text-contrast-color: var(--special-text-color);\n        --text-color: var(--special-text-color);\n        --special-color: var(--special-text-color);\n        --mark-color: var(--special-mark-color);\n      }',
    ],
    template: '',
    behaviors: { control: true, action: true },
  },
  {
    tag: 'nu-cardbtn',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      radius: '',
      text: 'wrap :special[sb wrap]',
      transition: 'theme, radius',
      outline: '#clear :focus-visible[y]',
      mark: 'n :focusable[hover]',
      cursor: 'pointer :disabled[default]',
      selectable: 'y',
      box: 'y',
      filter:
        'n :disabled[saturate(0.33) contrast(0.88) opacity(var(--disabled-opacity))]',
      'backdrop-filter': 'n :disabled[contrast(0.88)]',
      padding: '1.5x 2x',
      border: '1bw :clear[hidden] :hover[1bw] :clear:hover[#mark]',
      flow: 'column',
      gap: '1x',
      content: 'center :dropdown[stretch]',
      items: 'center stretch',
      inset:
        '#clear :active[#shadow.50] :active:special[#special-shadow.50] :pressed[y] :pressed:special[#special-shadow] :active:pressed[#shadow.50] :active:special[#special-shadow.50] :active:pressed:special[#special-shadow.50]',
      fill:
        '#bg :disabled[#bg] :special.disabled[#special-bg] :clear[#clear] :clear:disabled[#clear]',
      color:
        '#text :clear[#special] :special[#special-text] :special:clear[#special-text]',
      shadow: '0 :clear[1.5]',
    },
    attrs: {},
    context: {},
    role: 'button',
    contents: '',
    css: [
      'nu-cardbtn::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-cardbtn {\n        touch-action: manipulation;\n        -webkit-tap-highlight-color: var(--mark-color);\n      }',
      'nu-cardbtn[disabled] {\n        pointer-events: none;\n      }',
      'nu-cardbtn > a {\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        overflow: hidden;\n        cursor: inherit;\n        color: transparent;\n        text-decoration: inherit;\n        text-indent: -999rem;\n        white-space: nowrap;\n      }',
      'nu-cardbtn > a:focus {\n        outline: none;\n      }',
      'nu-cardbtn[special] {\n        --shadow-color: var(--special-shadow-color);\n        --shadow-color-rgb: var(--special-shadow-color-rgb);\n      }',
      'nu-cardbtn[special] > :not([theme]) {\n        --text-soft-color: var(--special-text-color);\n        --text-contrast-color: var(--special-text-color);\n        --text-color: var(--special-text-color);\n        --special-color: var(--special-text-color);\n        --mark-color: var(--special-mark-color);\n      }',
    ],
    template: '',
    behaviors: { control: true, action: true },
  },
  {
    tag: 'nu-itembtn',
    type: 'element',
    styles: {
      display: 'grid',
      sizing: 'border',
      radius: '0',
      text: 'sb nowrap',
      transition: 'theme, radius, filter',
      outline: '#clear :focus-visible[y]',
      mark: 'n :focusable[hover]',
      cursor: 'pointer :disabled[default]',
      selectable: 'y',
      box: 'y',
      filter:
        'n :disabled[saturate(0.33) contrast(0.88) opacity(var(--disabled-opacity))]',
      'backdrop-filter': 'n :disabled[contrast(0.88)]',
      padding: '',
      border: '0',
      flow: 'column',
      gap: '1x',
      content: 'center :dropdown[stretch]',
      items: 'center stretch',
      inset:
        '#clear :active[#shadow.50] :active:special[#special-shadow.50] :pressed[y] :pressed:special[#special-shadow] :active:pressed[#shadow.50] :active:special[#special-shadow.50] :active:pressed:special[#special-shadow.50]',
      fill: '#clear',
      color:
        '#text :clear[#special] :special[#special-text] :special:clear[#special-text]',
    },
    attrs: {},
    context: {},
    role: 'button',
    contents: '',
    css: [
      'nu-itembtn::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-itembtn {\n        touch-action: manipulation;\n        -webkit-tap-highlight-color: var(--mark-color);\n      }',
      'nu-itembtn[disabled] {\n        pointer-events: none;\n      }',
      'nu-itembtn > a {\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        overflow: hidden;\n        cursor: inherit;\n        color: transparent;\n        text-decoration: inherit;\n        text-indent: -999rem;\n        white-space: nowrap;\n      }',
      'nu-itembtn > a:focus {\n        outline: none;\n      }',
      'nu-itembtn[special] {\n        --shadow-color: var(--special-shadow-color);\n        --shadow-color-rgb: var(--special-shadow-color-rgb);\n      }',
      'nu-itembtn[special] > :not([theme]) {\n        --text-soft-color: var(--special-text-color);\n        --text-contrast-color: var(--special-text-color);\n        --text-color: var(--special-text-color);\n        --special-color: var(--special-text-color);\n        --mark-color: var(--special-mark-color);\n      }',
    ],
    template: '',
    behaviors: { control: true, action: true },
  },
  {
    tag: 'nu-menu',
    type: 'element',
    styles: {
      display: 'flex',
      sizing: 'border',
      flow: 'column',
      padding: '.5x',
      radius: '',
    },
    attrs: {},
    context: {
      'attrs:popup': {
        width: '(100% + 1x) 100vw :drop[--fixate-width min-content 100vw]',
      },
    },
    role: 'menu',
    contents: '',
    css: [
      'nu-menu::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { menu: true },
  },
  {
    tag: 'nu-menuitem',
    type: 'element',
    styles: {
      display: 'inline-grid',
      sizing: 'border',
      radius: '.5r',
      text: 'sb nowrap :special[sb nowrap]',
      transition: 'theme, radius, filter',
      outline: '#clear :focus-visible[y]',
      mark: 'hover',
      cursor: 'pointer :disabled[default]',
      selectable: 'y',
      box: 'y',
      filter:
        'n :disabled[saturate(0.33) contrast(0.88) opacity(var(--disabled-opacity))]',
      'backdrop-filter': 'n :disabled[contrast(0.88)]',
      padding: '1x 1.5x',
      border: '0',
      flow: 'column',
      gap: '1x',
      content: 'stretch',
      items: 'center stretch',
      fill: '#clear',
      inset: 'n :active[#shadow.50]',
    },
    attrs: {},
    context: {},
    role: 'menuitem',
    contents: '',
    css: [
      'nu-menuitem::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-menuitem {\n        touch-action: manipulation;\n        -webkit-tap-highlight-color: var(--mark-color);\n      }',
      'nu-menuitem[disabled] {\n        pointer-events: none;\n      }',
      'nu-menuitem > a {\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        overflow: hidden;\n        cursor: inherit;\n        color: transparent;\n        text-decoration: inherit;\n        text-indent: -999rem;\n        white-space: nowrap;\n      }',
      'nu-menuitem > a:focus {\n        outline: none;\n      }',
    ],
    template: '',
    behaviors: { control: true, action: true, menuitem: true },
  },
  {
    tag: 'nu-blockquote',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      radius: 'right',
      border: '(1x / 2) left #special',
      fill: '#diff',
      text: 'i',
      padding: '2x',
      size: 'lg',
    },
    attrs: {},
    context: {},
    role: 'blockquote',
    contents: '',
    css: [
      'nu-blockquote::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-badge',
    type: 'element',
    styles: {
      display: 'inline-grid',
      sizing: 'border',
      flow: 'column',
      gap: '1x',
      items: 'center',
      padding: '0 .5em',
      radius: '',
      border: '1bw :special[1bw hidden]',
      text: 'nowrap :special[sb nowrap]',
      fill: '#bg :special[#special-bg]',
      color: '#text :special[#special-text]',
      box: 'y',
    },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-badge::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-badge {\n        line-height: calc(var(--line-height) - 1px);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-mark',
    type: 'element',
    styles: {
      display: 'inline-block',
      sizing: 'border',
      text: 'nowrap bolder',
      padding: '0 .25em',
      space: '0 .25em',
      radius: '1r',
      color: '#text :special[#special-text]',
      fill:
        '#mark :special[#special-bg] :themed[#bg] :special:themed[#special-bg]',
    },
    attrs: {},
    context: {},
    role: 'mark',
    contents: '',
    css: [
      'nu-mark::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-special',
    type: 'element',
    styles: {
      display: 'inline',
      sizing: 'border',
      color: '#special',
      text: 'sb',
    },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-special::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-circle',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      width: '1fs 1fs',
      height: '1fs 1fs',
      size: '1em',
      radius: 'round',
      border: '',
      fill: '#bg :special[#special]',
    },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-circle::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-triangle',
    type: 'element',
    styles: {
      display: 'inline-block',
      sizing: 'border',
      direction: 'up',
      color: '#border',
      overflow: 'no',
      text: 'v-middle',
      height: '0',
      width: '0',
      border: '(1fs / 2) #clear',
    },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-triangle::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-triangle:not([border]):not([border]) {\n        border-top: 0;\n        border-bottom-color: currentColor;\n        border-bottom-width: calc(var(--line-height) / 2);\n      }',
      'nu-triangle:not([size]):not([size]) {\n        font-size: inherit;\n        line-height: inherit;\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-datetime',
    type: 'element',
    styles: { display: 'inline-block', sizing: 'border' },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-datetime::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { datetime: true },
  },
  {
    tag: 'nu-num',
    type: 'element',
    styles: { display: 'inline-block', sizing: 'border' },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-num::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { number: true },
  },
  {
    tag: 'nu-input',
    type: 'element',
    styles: {
      display: 'grid',
      sizing: 'border',
      flow: 'column',
      radius: '',
      padding: '1x',
      fill: '#input :special[#special-bg]',
      color: '#text :special[#special-text]',
      border: '1bw',
      outline: 'focus-inside',
      filter:
        'n :disabled[saturate(0.33) contrast(0.78) opacity(var(--disabled-opacity))]',
      transition: 'theme',
      selectable: 'n',
      box: 'y',
      height: 'auto :empty[min (1fs + 2x)]',
      cursor: 'text',
      width: 'auto',
    },
    attrs: {},
    context: { 'attrs:icon': { width: '((--gap * 2) + 1em)' } },
    role: '',
    contents: '',
    css: [
      'nu-input::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-input input::-webkit-inner-spin-button, nu-input input::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }',
      'nu-input input, nu-input textarea {\n        display: block;\n        width: 100%;\n        max-width: initial;\n        min-width: initial;\n        height: initial;\n        min-height: initial;\n        max-height: initial;\n        margin: 0;\n        -webkit-appearance: none;\n        font-family: inherit;\n        font-weight: inherit;\n        font-size: inherit;\n        line-height: inherit;\n        text-align: inherit;\n        word-spacing: calc(1rem / 8);\n        background: transparent;\n        color: inherit;\n        -webkit-text-fill-color: currentColor;\n        border: none;\n        outline: none;\n        border-radius: inherit;\n        box-sizing: border-box;\n        user-select: auto;\n        resize: none;\n        transition: opacity calc(var(--transition-enabler) * var(--transition)) linear;\n      }',
      'nu-input input::-webkit-search-cancel-button, nu-input textarea::-webkit-search-cancel-button {\n        display: none;\n      }',
      'nu-input input:-webkit-autofill, nu-input input:-webkit-autofill:hover, nu-input input:-webkit-autofill:focus {\n        caret-color: var(--special-color);\n        -webkit-text-fill-color: var(--special-color);\n        -webkit-box-shadow: 0 0 0px 9999rem var(--input-color) inset;\n        box-shadow: 0 0 0px 9999rem var(--input-color) inset;\n        font-family: inherit;\n        font-size: inherit;\n        line-height: inherit;\n      }',
      'nu-input input[disabled], nu-input textarea[disabled] {\n        color: inherit;\n        background: transparent;\n        -webkit-opacity: 1;\n      }',
      'nu-input input::placeholder, nu-input textarea::placeholder {\n        -webkit-text-fill-color: var(--local-placeholder-color);\n        color: var(--local-placeholder-color);\n        filter: saturate(.33);\n      }',
      'nu-input[special]:not([disabled]) input::placeholder, nu-input[special]:not([disabled]) textarea::placeholder {\n        --local-placeholder-color: var(--placeholder-color, rgba(var(--special-text-color-rgb), .5));\n      }',
      'nu-input:not([special]):not([disabled]) input::placeholder, nu-input:not([special]):not([disabled]) textarea::placeholder {\n        --local-placeholder-color: var(--placeholder-color, rgba(var(--text-color-rgb), .5));\n      }',
    ],
    template: '',
    behaviors: { input: true },
  },
  {
    tag: 'nu-numinput',
    type: 'element',
    styles: {
      display: 'grid',
      sizing: 'border',
      flow: 'column',
      radius: '',
      padding: '1x',
      fill: '#input :special[#special-bg]',
      color: '#text :special[#special-text]',
      border: '1bw',
      outline: 'focus-inside',
      filter:
        'n :disabled[saturate(0.33) contrast(0.78) opacity(var(--disabled-opacity))]',
      transition: 'theme',
      selectable: 'n',
      box: 'y',
      height: 'auto :empty[min (1fs + 2x)]',
      cursor: 'text',
      width: 'auto',
      text: 'center',
    },
    attrs: {},
    context: { 'attrs:icon': { width: '((--gap * 2) + 1em)' } },
    role: '',
    contents: '',
    css: [
      'nu-numinput::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-numinput input::-webkit-inner-spin-button, nu-numinput input::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }',
      'nu-numinput input, nu-numinput textarea {\n        display: block;\n        width: 100%;\n        max-width: initial;\n        min-width: initial;\n        height: initial;\n        min-height: initial;\n        max-height: initial;\n        margin: 0;\n        -webkit-appearance: none;\n        font-family: inherit;\n        font-weight: inherit;\n        font-size: inherit;\n        line-height: inherit;\n        text-align: inherit;\n        word-spacing: calc(1rem / 8);\n        background: transparent;\n        color: inherit;\n        -webkit-text-fill-color: currentColor;\n        border: none;\n        outline: none;\n        border-radius: inherit;\n        box-sizing: border-box;\n        user-select: auto;\n        resize: none;\n        transition: opacity calc(var(--transition-enabler) * var(--transition)) linear;\n      }',
      'nu-numinput input::-webkit-search-cancel-button, nu-numinput textarea::-webkit-search-cancel-button {\n        display: none;\n      }',
      'nu-numinput input:-webkit-autofill, nu-numinput input:-webkit-autofill:hover, nu-numinput input:-webkit-autofill:focus {\n        caret-color: var(--special-color);\n        -webkit-text-fill-color: var(--special-color);\n        -webkit-box-shadow: 0 0 0px 9999rem var(--input-color) inset;\n        box-shadow: 0 0 0px 9999rem var(--input-color) inset;\n        font-family: inherit;\n        font-size: inherit;\n        line-height: inherit;\n      }',
      'nu-numinput input[disabled], nu-numinput textarea[disabled] {\n        color: inherit;\n        background: transparent;\n        -webkit-opacity: 1;\n      }',
      'nu-numinput input::placeholder, nu-numinput textarea::placeholder {\n        -webkit-text-fill-color: var(--local-placeholder-color);\n        color: var(--local-placeholder-color);\n        filter: saturate(.33);\n      }',
      'nu-numinput[special]:not([disabled]) input::placeholder, nu-numinput[special]:not([disabled]) textarea::placeholder {\n        --local-placeholder-color: var(--placeholder-color, rgba(var(--special-text-color-rgb), .5));\n      }',
      'nu-numinput:not([special]):not([disabled]) input::placeholder, nu-numinput:not([special]):not([disabled]) textarea::placeholder {\n        --local-placeholder-color: var(--placeholder-color, rgba(var(--text-color-rgb), .5));\n      }',
      'nu-numinput > input:not(:focus) {\n        opacity: 0;\n      }',
      'nu-numinput > input:focus {\n        opacity: 1;\n      }',
      'nu-numinput::after {\n          content: var(--value);\n          display: grid;\n          place-content: center;\n          position: absolute;\n          top: 0;\n          right: 0;\n          bottom: 0;\n          left: 0;\n          text-align: inherit;\n          transition: opacity calc(var(--transition-enabler) * var(--transition)) linear;\n          pointer-events: none;\n        }',
      'nu-numinput:not(:focus-within)::after {\n          opacity: 1;\n        }',
      'nu-numinput:focus-within::after {\n          opacity: 0;\n        }',
    ],
    template: '',
    behaviors: { input: null, numinput: true },
  },
  {
    tag: 'nu-password',
    type: 'element',
    styles: {
      display: 'grid',
      sizing: 'border',
      flow: 'column',
      radius: '',
      padding: '1x',
      fill: '#input :special[#special-bg]',
      color: '#text :special[#special-text]',
      border: '1bw',
      outline: 'focus-inside',
      filter:
        'n :disabled[saturate(0.33) contrast(0.78) opacity(var(--disabled-opacity))]',
      transition: 'theme',
      selectable: 'n',
      box: 'y',
      height: 'auto :empty[min (1fs + 2x)]',
      cursor: 'text',
      width: 'auto',
    },
    attrs: {},
    context: { 'attrs:icon': { width: '((--gap * 2) + 1em)' } },
    role: '',
    contents: '',
    css: [
      'nu-password::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-password input::-webkit-inner-spin-button, nu-password input::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }',
      'nu-password input, nu-password textarea {\n        display: block;\n        width: 100%;\n        max-width: initial;\n        min-width: initial;\n        height: initial;\n        min-height: initial;\n        max-height: initial;\n        margin: 0;\n        -webkit-appearance: none;\n        font-family: inherit;\n        font-weight: inherit;\n        font-size: inherit;\n        line-height: inherit;\n        text-align: inherit;\n        word-spacing: calc(1rem / 8);\n        background: transparent;\n        color: inherit;\n        -webkit-text-fill-color: currentColor;\n        border: none;\n        outline: none;\n        border-radius: inherit;\n        box-sizing: border-box;\n        user-select: auto;\n        resize: none;\n        transition: opacity calc(var(--transition-enabler) * var(--transition)) linear;\n      }',
      'nu-password input::-webkit-search-cancel-button, nu-password textarea::-webkit-search-cancel-button {\n        display: none;\n      }',
      'nu-password input:-webkit-autofill, nu-password input:-webkit-autofill:hover, nu-password input:-webkit-autofill:focus {\n        caret-color: var(--special-color);\n        -webkit-text-fill-color: var(--special-color);\n        -webkit-box-shadow: 0 0 0px 9999rem var(--input-color) inset;\n        box-shadow: 0 0 0px 9999rem var(--input-color) inset;\n        font-family: inherit;\n        font-size: inherit;\n        line-height: inherit;\n      }',
      'nu-password input[disabled], nu-password textarea[disabled] {\n        color: inherit;\n        background: transparent;\n        -webkit-opacity: 1;\n      }',
      'nu-password input::placeholder, nu-password textarea::placeholder {\n        -webkit-text-fill-color: var(--local-placeholder-color);\n        color: var(--local-placeholder-color);\n        filter: saturate(.33);\n      }',
      'nu-password[special]:not([disabled]) input::placeholder, nu-password[special]:not([disabled]) textarea::placeholder {\n        --local-placeholder-color: var(--placeholder-color, rgba(var(--special-text-color-rgb), .5));\n      }',
      'nu-password:not([special]):not([disabled]) input::placeholder, nu-password:not([special]):not([disabled]) textarea::placeholder {\n        --local-placeholder-color: var(--placeholder-color, rgba(var(--text-color-rgb), .5));\n      }',
    ],
    template: '',
    behaviors: { input: 'type(password)' },
  },
  {
    tag: 'nu-search',
    type: 'element',
    styles: {
      display: 'grid',
      sizing: 'border',
      flow: 'column',
      radius: '',
      padding: '1x',
      fill: '#input :special[#special-bg]',
      color: '#text :special[#special-text]',
      border: '1bw',
      outline: 'focus-inside',
      filter:
        'n :disabled[saturate(0.33) contrast(0.78) opacity(var(--disabled-opacity))]',
      transition: 'theme',
      selectable: 'n',
      box: 'y',
      height: 'auto :empty[min (1fs + 2x)]',
      cursor: 'text',
      width: 'auto',
    },
    attrs: {},
    context: {
      'attrs:icon': { width: '((--gap * 2) + 1em)', $shadowRoot: null },
    },
    role: '',
    contents: '',
    css: [
      'nu-search::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-search input::-webkit-inner-spin-button, nu-search input::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }',
      'nu-search input, nu-search textarea {\n        display: block;\n        width: 100%;\n        max-width: initial;\n        min-width: initial;\n        height: initial;\n        min-height: initial;\n        max-height: initial;\n        margin: 0;\n        -webkit-appearance: none;\n        font-family: inherit;\n        font-weight: inherit;\n        font-size: inherit;\n        line-height: inherit;\n        text-align: inherit;\n        word-spacing: calc(1rem / 8);\n        background: transparent;\n        color: inherit;\n        -webkit-text-fill-color: currentColor;\n        border: none;\n        outline: none;\n        border-radius: inherit;\n        box-sizing: border-box;\n        user-select: auto;\n        resize: none;\n        transition: opacity calc(var(--transition-enabler) * var(--transition)) linear;\n      }',
      'nu-search input::-webkit-search-cancel-button, nu-search textarea::-webkit-search-cancel-button {\n        display: none;\n      }',
      'nu-search input:-webkit-autofill, nu-search input:-webkit-autofill:hover, nu-search input:-webkit-autofill:focus {\n        caret-color: var(--special-color);\n        -webkit-text-fill-color: var(--special-color);\n        -webkit-box-shadow: 0 0 0px 9999rem var(--input-color) inset;\n        box-shadow: 0 0 0px 9999rem var(--input-color) inset;\n        font-family: inherit;\n        font-size: inherit;\n        line-height: inherit;\n      }',
      'nu-search input[disabled], nu-search textarea[disabled] {\n        color: inherit;\n        background: transparent;\n        -webkit-opacity: 1;\n      }',
      'nu-search input::placeholder, nu-search textarea::placeholder {\n        -webkit-text-fill-color: var(--local-placeholder-color);\n        color: var(--local-placeholder-color);\n        filter: saturate(.33);\n      }',
      'nu-search[special]:not([disabled]) input::placeholder, nu-search[special]:not([disabled]) textarea::placeholder {\n        --local-placeholder-color: var(--placeholder-color, rgba(var(--special-text-color-rgb), .5));\n      }',
      'nu-search:not([special]):not([disabled]) input::placeholder, nu-search:not([special]):not([disabled]) textarea::placeholder {\n        --local-placeholder-color: var(--placeholder-color, rgba(var(--text-color-rgb), .5));\n      }',
    ],
    template: '',
    behaviors: { input: 'type(search)' },
  },
  {
    tag: 'nu-telinput',
    type: 'element',
    styles: {
      display: 'grid',
      sizing: 'border',
      flow: 'column',
      radius: '',
      padding: '1x',
      fill: '#input :special[#special-bg]',
      color: '#text :special[#special-text]',
      border: '1bw',
      outline: 'focus-inside',
      filter:
        'n :disabled[saturate(0.33) contrast(0.78) opacity(var(--disabled-opacity))]',
      transition: 'theme',
      selectable: 'n',
      box: 'y',
      height: 'auto :empty[min (1fs + 2x)]',
      cursor: 'text',
      width: 'auto',
    },
    attrs: {},
    context: { 'attrs:icon': { width: '((--gap * 2) + 1em)' } },
    role: '',
    contents: '',
    css: [
      'nu-telinput::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-telinput input::-webkit-inner-spin-button, nu-telinput input::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }',
      'nu-telinput input, nu-telinput textarea {\n        display: block;\n        width: 100%;\n        max-width: initial;\n        min-width: initial;\n        height: initial;\n        min-height: initial;\n        max-height: initial;\n        margin: 0;\n        -webkit-appearance: none;\n        font-family: inherit;\n        font-weight: inherit;\n        font-size: inherit;\n        line-height: inherit;\n        text-align: inherit;\n        word-spacing: calc(1rem / 8);\n        background: transparent;\n        color: inherit;\n        -webkit-text-fill-color: currentColor;\n        border: none;\n        outline: none;\n        border-radius: inherit;\n        box-sizing: border-box;\n        user-select: auto;\n        resize: none;\n        transition: opacity calc(var(--transition-enabler) * var(--transition)) linear;\n      }',
      'nu-telinput input::-webkit-search-cancel-button, nu-telinput textarea::-webkit-search-cancel-button {\n        display: none;\n      }',
      'nu-telinput input:-webkit-autofill, nu-telinput input:-webkit-autofill:hover, nu-telinput input:-webkit-autofill:focus {\n        caret-color: var(--special-color);\n        -webkit-text-fill-color: var(--special-color);\n        -webkit-box-shadow: 0 0 0px 9999rem var(--input-color) inset;\n        box-shadow: 0 0 0px 9999rem var(--input-color) inset;\n        font-family: inherit;\n        font-size: inherit;\n        line-height: inherit;\n      }',
      'nu-telinput input[disabled], nu-telinput textarea[disabled] {\n        color: inherit;\n        background: transparent;\n        -webkit-opacity: 1;\n      }',
      'nu-telinput input::placeholder, nu-telinput textarea::placeholder {\n        -webkit-text-fill-color: var(--local-placeholder-color);\n        color: var(--local-placeholder-color);\n        filter: saturate(.33);\n      }',
      'nu-telinput[special]:not([disabled]) input::placeholder, nu-telinput[special]:not([disabled]) textarea::placeholder {\n        --local-placeholder-color: var(--placeholder-color, rgba(var(--special-text-color-rgb), .5));\n      }',
      'nu-telinput:not([special]):not([disabled]) input::placeholder, nu-telinput:not([special]):not([disabled]) textarea::placeholder {\n        --local-placeholder-color: var(--placeholder-color, rgba(var(--text-color-rgb), .5));\n      }',
    ],
    template: '',
    behaviors: { input: 'type(tel)' },
  },
  {
    tag: 'nu-emailinput',
    type: 'element',
    styles: {
      display: 'grid',
      sizing: 'border',
      flow: 'column',
      radius: '',
      padding: '1x',
      fill: '#input :special[#special-bg]',
      color: '#text :special[#special-text]',
      border: '1bw',
      outline: 'focus-inside',
      filter:
        'n :disabled[saturate(0.33) contrast(0.78) opacity(var(--disabled-opacity))]',
      transition: 'theme',
      selectable: 'n',
      box: 'y',
      height: 'auto :empty[min (1fs + 2x)]',
      cursor: 'text',
      width: 'auto',
    },
    attrs: {},
    context: { 'attrs:icon': { width: '((--gap * 2) + 1em)' } },
    role: '',
    contents: '',
    css: [
      'nu-emailinput::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-emailinput input::-webkit-inner-spin-button, nu-emailinput input::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }',
      'nu-emailinput input, nu-emailinput textarea {\n        display: block;\n        width: 100%;\n        max-width: initial;\n        min-width: initial;\n        height: initial;\n        min-height: initial;\n        max-height: initial;\n        margin: 0;\n        -webkit-appearance: none;\n        font-family: inherit;\n        font-weight: inherit;\n        font-size: inherit;\n        line-height: inherit;\n        text-align: inherit;\n        word-spacing: calc(1rem / 8);\n        background: transparent;\n        color: inherit;\n        -webkit-text-fill-color: currentColor;\n        border: none;\n        outline: none;\n        border-radius: inherit;\n        box-sizing: border-box;\n        user-select: auto;\n        resize: none;\n        transition: opacity calc(var(--transition-enabler) * var(--transition)) linear;\n      }',
      'nu-emailinput input::-webkit-search-cancel-button, nu-emailinput textarea::-webkit-search-cancel-button {\n        display: none;\n      }',
      'nu-emailinput input:-webkit-autofill, nu-emailinput input:-webkit-autofill:hover, nu-emailinput input:-webkit-autofill:focus {\n        caret-color: var(--special-color);\n        -webkit-text-fill-color: var(--special-color);\n        -webkit-box-shadow: 0 0 0px 9999rem var(--input-color) inset;\n        box-shadow: 0 0 0px 9999rem var(--input-color) inset;\n        font-family: inherit;\n        font-size: inherit;\n        line-height: inherit;\n      }',
      'nu-emailinput input[disabled], nu-emailinput textarea[disabled] {\n        color: inherit;\n        background: transparent;\n        -webkit-opacity: 1;\n      }',
      'nu-emailinput input::placeholder, nu-emailinput textarea::placeholder {\n        -webkit-text-fill-color: var(--local-placeholder-color);\n        color: var(--local-placeholder-color);\n        filter: saturate(.33);\n      }',
      'nu-emailinput[special]:not([disabled]) input::placeholder, nu-emailinput[special]:not([disabled]) textarea::placeholder {\n        --local-placeholder-color: var(--placeholder-color, rgba(var(--special-text-color-rgb), .5));\n      }',
      'nu-emailinput:not([special]):not([disabled]) input::placeholder, nu-emailinput:not([special]):not([disabled]) textarea::placeholder {\n        --local-placeholder-color: var(--placeholder-color, rgba(var(--text-color-rgb), .5));\n      }',
    ],
    template: '',
    behaviors: { input: 'type(email)' },
  },
  {
    tag: 'nu-onetimecode',
    type: 'element',
    styles: {
      display: 'grid',
      sizing: 'border',
      flow: 'column',
      radius: '',
      padding: '1x',
      fill: '#input :special[#special-bg]',
      color: '#text :special[#special-text]',
      border: '1bw',
      outline: 'focus-inside',
      filter:
        'n :disabled[saturate(0.33) contrast(0.78) opacity(var(--disabled-opacity))]',
      transition: 'theme',
      selectable: 'n',
      box: 'y',
      height: 'auto :empty[min (1fs + 2x)]',
      cursor: 'text',
      width: 'auto',
    },
    attrs: {
      maxlength: '4',
      placeholder: '••••',
      autocomplete: 'one-time-code',
    },
    context: { 'attrs:icon': { width: '((--gap * 2) + 1em)' } },
    role: '',
    contents: '',
    css: [
      'nu-onetimecode::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-onetimecode input::-webkit-inner-spin-button, nu-onetimecode input::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }',
      'nu-onetimecode input, nu-onetimecode textarea {\n        display: block;\n        width: 100%;\n        max-width: initial;\n        min-width: initial;\n        height: initial;\n        min-height: initial;\n        max-height: initial;\n        margin: 0;\n        -webkit-appearance: none;\n        font-family: inherit;\n        font-weight: inherit;\n        font-size: inherit;\n        line-height: inherit;\n        text-align: inherit;\n        word-spacing: calc(1rem / 8);\n        background: transparent;\n        color: inherit;\n        -webkit-text-fill-color: currentColor;\n        border: none;\n        outline: none;\n        border-radius: inherit;\n        box-sizing: border-box;\n        user-select: auto;\n        resize: none;\n        transition: opacity calc(var(--transition-enabler) * var(--transition)) linear;\n      }',
      'nu-onetimecode input::-webkit-search-cancel-button, nu-onetimecode textarea::-webkit-search-cancel-button {\n        display: none;\n      }',
      'nu-onetimecode input:-webkit-autofill, nu-onetimecode input:-webkit-autofill:hover, nu-onetimecode input:-webkit-autofill:focus {\n        caret-color: var(--special-color);\n        -webkit-text-fill-color: var(--special-color);\n        -webkit-box-shadow: 0 0 0px 9999rem var(--input-color) inset;\n        box-shadow: 0 0 0px 9999rem var(--input-color) inset;\n        font-family: inherit;\n        font-size: inherit;\n        line-height: inherit;\n      }',
      'nu-onetimecode input[disabled], nu-onetimecode textarea[disabled] {\n        color: inherit;\n        background: transparent;\n        -webkit-opacity: 1;\n      }',
      'nu-onetimecode input::placeholder, nu-onetimecode textarea::placeholder {\n        -webkit-text-fill-color: var(--local-placeholder-color);\n        color: var(--local-placeholder-color);\n        filter: saturate(.33);\n      }',
      'nu-onetimecode[special]:not([disabled]) input::placeholder, nu-onetimecode[special]:not([disabled]) textarea::placeholder {\n        --local-placeholder-color: var(--placeholder-color, rgba(var(--special-text-color-rgb), .5));\n      }',
      'nu-onetimecode:not([special]):not([disabled]) input::placeholder, nu-onetimecode:not([special]):not([disabled]) textarea::placeholder {\n        --local-placeholder-color: var(--placeholder-color, rgba(var(--text-color-rgb), .5));\n      }',
    ],
    template: '',
    behaviors: { input: 'type(tel)' },
  },
  {
    tag: 'nu-fileinput',
    type: 'element',
    styles: {
      display: 'grid',
      sizing: 'border',
      flow: 'column',
      radius: '',
      padding: '1x',
      fill: '#input :special[#special-bg]',
      color: '#text :special[#special-text]',
      border: '1bw',
      outline: 'focus-inside',
      filter:
        'n :disabled[saturate(0.33) contrast(0.78) opacity(var(--disabled-opacity))]',
      transition: 'theme',
      selectable: 'n',
      box: 'y',
      height: 'min (1lh + 2x + 2bw)',
      cursor: 'pointer',
      width: 'auto',
      content: 'center start',
      gap: '2x',
      items: 'center stretch',
      mark: 'hover',
    },
    attrs: {},
    context: { 'attrs:icon': { width: '((--gap * 2) + 1em)' } },
    role: '',
    contents: '',
    css: [
      'nu-fileinput::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-fileinput input::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }',
      'nu-fileinput input {\n        opacity: 0;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        transform: scale(100, 100);\n        cursor: inherit;\n      }',
    ],
    template:
      '\n      <nu-block place="cover" opacity="0" overflow="n"><input/></nu-block>\n      <nu-icon name="upload"></nu-icon>\n      <nu-value></nu-value>\n    ',
    behaviors: { fileinput: true, hover: true },
  },
  {
    tag: 'nu-textarea',
    type: 'element',
    styles: {
      display: 'grid',
      sizing: 'border',
      flow: 'column',
      radius: '',
      padding: '1x',
      fill: '#input :special[#special-bg]',
      color: '#text :special[#special-text]',
      border: '1bw',
      outline: 'focus-inside',
      filter:
        'n :disabled[saturate(0.33) contrast(0.78) opacity(var(--disabled-opacity))]',
      transition: 'theme',
      selectable: 'n',
      box: 'y',
      height: '3lh + 2x + 2bw',
      cursor: 'text',
      width: 'auto',
    },
    attrs: {},
    context: { 'attrs:icon': { width: '((--gap * 2) + 1em)' } },
    role: '',
    contents: '',
    css: [
      'nu-textarea::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-textarea input::-webkit-inner-spin-button, nu-textarea input::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }',
      'nu-textarea input, nu-textarea textarea {\n        display: block;\n        width: 100%;\n        max-width: initial;\n        min-width: initial;\n        height: initial;\n        min-height: initial;\n        max-height: initial;\n        margin: 0;\n        -webkit-appearance: none;\n        font-family: inherit;\n        font-weight: inherit;\n        font-size: inherit;\n        line-height: inherit;\n        text-align: inherit;\n        word-spacing: calc(1rem / 8);\n        background: transparent;\n        color: inherit;\n        -webkit-text-fill-color: currentColor;\n        border: none;\n        outline: none;\n        border-radius: inherit;\n        box-sizing: border-box;\n        user-select: auto;\n        resize: none;\n        transition: opacity calc(var(--transition-enabler) * var(--transition)) linear;\n      }',
      'nu-textarea input::-webkit-search-cancel-button, nu-textarea textarea::-webkit-search-cancel-button {\n        display: none;\n      }',
      'nu-textarea input:-webkit-autofill, nu-textarea input:-webkit-autofill:hover, nu-textarea input:-webkit-autofill:focus {\n        caret-color: var(--special-color);\n        -webkit-text-fill-color: var(--special-color);\n        -webkit-box-shadow: 0 0 0px 9999rem var(--input-color) inset;\n        box-shadow: 0 0 0px 9999rem var(--input-color) inset;\n        font-family: inherit;\n        font-size: inherit;\n        line-height: inherit;\n      }',
      'nu-textarea input[disabled], nu-textarea textarea[disabled] {\n        color: inherit;\n        background: transparent;\n        -webkit-opacity: 1;\n      }',
      'nu-textarea input::placeholder, nu-textarea textarea::placeholder {\n        -webkit-text-fill-color: var(--local-placeholder-color);\n        color: var(--local-placeholder-color);\n        filter: saturate(.33);\n      }',
      'nu-textarea[special]:not([disabled]) input::placeholder, nu-textarea[special]:not([disabled]) textarea::placeholder {\n        --local-placeholder-color: var(--placeholder-color, rgba(var(--special-text-color-rgb), .5));\n      }',
      'nu-textarea:not([special]):not([disabled]) input::placeholder, nu-textarea:not([special]):not([disabled]) textarea::placeholder {\n        --local-placeholder-color: var(--placeholder-color, rgba(var(--text-color-rgb), .5));\n      }',
    ],
    template: '',
    behaviors: { input: null, textarea: true },
  },
  {
    tag: 'nu-svg',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'content',
      width: '1fs 100%',
      height: 'min 1fs',
      box: 'y',
      text: 'v-middle',
    },
    attrs: {},
    context: {},
    role: '',
    contents: 'svg',
    css: [
      'nu-svg::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { svg: true },
  },
  {
    tag: 'nu-img',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'content',
      fit: 'contain',
      box: 'y',
      text: 'v-middle',
      width: 'max 100%',
    },
    attrs: {},
    context: {},
    role: '',
    contents: 'img',
    css: [
      'nu-img::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-img > img {\n        display: block;\n      }',
    ],
    template: '',
    behaviors: { image: true },
  },
  {
    tag: 'nu-code',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      radius: '1r',
      text: 'monospace',
      fill: 'hue(0 0 0) :special[#dark]',
      color: 'hue(0 0 100) :special[#light]',
      '@com-color': 'hue(0 0 low) :special[hue(0 0 12 special)]',
      '@spc-color': 'hue(0 0 100) :special[color(white)]',
      '@nam-color': 'hue(0 0 100) :special[color(white)]',
      '@key-color': 'hue(240 70) :special[hue(240 70 10 special)]',
      '@num-color':
        'hue(280 100 pastel) :special[hue(280 100 10 pastel special)]',
      '@pct-color': 'hue(60 pastel) :special[hue(60 100 10 pastel special)]',
      '@rex-color': 'hue(340 70) :special[hue(340 70 10 special)]',
      '@str-color': 'hue(180 70) :special[hue(180 70 10 special)]',
      '@unk-color': 'hue(240 0) :special[hue(240 0 10 special)]',
      '@pls-color': 'hue(180 70) :special[hue(180 70 10 special)]',
      '@mns-color': 'hue(1 70) :special[hue(1 70 10 special)]',
      '@mrk-color': 'hue(240 70 60) :special[hue(240 0 0 special)]',
      '@mrk-bg-color': 'hue(240 70 3) :special[hue(240 70 50 special)]',
      '@imp-color': 'color(white)',
      '@imp-bg-color': 'hue(1 70 special)',
      font: 'Roboto Mono',
      '--mrk-color': '#white',
      '--mrk-bg-color': '#special-bg',
    },
    attrs: {},
    context: {},
    role: 'figure',
    contents: '',
    css: [
      'nu-code::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-code nu-block {\n        white-space: pre;\n      }',
      'nu-code > pre, nu-code > textarea {\n        display: none;\n      }',
      'nu-code nu-el {\n        display: inline !important;\n      }',
      "nu-code nu-el[plus]::before {\n        content: '+ ';\n        display: inline-block;\n      }",
      "nu-code nu-el[minus]::before {\n        content: '- ';\n        display: inline-block;\n      }",
      "nu-code nu-el[number]::before {\n        content: '1. ';\n        display: inline-block;\n      }",
      'nu-code nu-el[fill] {\n        border-radius: var(--radius);\n        padding: .25em;\n      }',
    ],
    template: '',
    behaviors: { code: true },
  },
  {
    tag: 'nu-cd',
    type: 'element',
    styles: {
      display: 'inline-block',
      sizing: 'border',
      radius: '1r',
      text: 'monospace',
      fill: 'hue(0 0 0) :special[#dark]',
      color: 'hue(0 0 100) :special[#light]',
      '@com-color': 'hue(0 0 low) :special[hue(0 0 12 special)]',
      '@spc-color': 'hue(0 0 100) :special[color(white)]',
      '@nam-color': 'hue(0 0 100) :special[color(white)]',
      '@key-color': 'hue(240 70) :special[hue(240 70 10 special)]',
      '@num-color':
        'hue(280 100 pastel) :special[hue(280 100 10 pastel special)]',
      '@pct-color': 'hue(60 pastel) :special[hue(60 100 10 pastel special)]',
      '@rex-color': 'hue(340 70) :special[hue(340 70 10 special)]',
      '@str-color': 'hue(180 70) :special[hue(180 70 10 special)]',
      '@unk-color': 'hue(240 0) :special[hue(240 0 10 special)]',
      '@pls-color': 'hue(180 70) :special[hue(180 70 10 special)]',
      '@mns-color': 'hue(1 70) :special[hue(1 70 10 special)]',
      '@mrk-color': 'hue(240 70 60) :special[hue(240 0 0 special)]',
      '@mrk-bg-color': 'hue(240 70 3) :special[hue(240 70 50 special)]',
      '@imp-color': 'color(white)',
      '@imp-bg-color': 'hue(1 70 special)',
      font: 'Roboto Mono',
      '--mrk-color': '#white',
      '--mrk-bg-color': '#special-bg',
      padding: '.125rem .25em',
    },
    attrs: {},
    context: {},
    role: 'figure',
    contents: '',
    css: [
      'nu-cd::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-cd nu-block {\n        white-space: pre;\n      }',
      'nu-cd > pre, nu-cd > textarea {\n        display: none;\n      }',
      'nu-cd nu-el {\n        display: inline !important;\n      }',
      "nu-cd nu-el[plus]::before {\n        content: '+ ';\n        display: inline-block;\n      }",
      "nu-cd nu-el[minus]::before {\n        content: '- ';\n        display: inline-block;\n      }",
      "nu-cd nu-el[number]::before {\n        content: '1. ';\n        display: inline-block;\n      }",
      'nu-cd nu-el[fill] {\n        border-radius: var(--radius);\n        padding: .25em;\n      }',
    ],
    template: '',
    behaviors: { code: null },
  },
  {
    tag: 'nu-debug',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      flow: 'column',
      box: 'y',
      padding: '2x',
      fill: '#bg :clear[#clear]',
      color: '#text :clear[current]',
      border: '1bw :clear[0]',
      radius: '1r',
      transition: 'theme, radius',
      shadow: '0 :clear[0 1x 4x #shadow.33]',
      gap: '1x',
    },
    attrs: {},
    context: {},
    role: 'region',
    contents: '',
    css: [
      'nu-debug::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { debugger: true },
  },
  {
    tag: 'nu-progressbar',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      transition: 'opacity',
      radius: '.5r',
      border: '',
      fill: '#bg',
      box: 'y',
      height: 'min .5em',
      overflow: 'no',
    },
    attrs: {},
    context: {},
    role: 'progressbar',
    contents: '',
    css: [
      'nu-progressbar::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      "nu-progressbar::before {\n        content: '';\n        position: absolute;\n        left: 0;\n        width: calc(var(--value) * 100%);\n        top: 0;\n        bottom: 0;\n        background: var(--special-color);\n        border-radius: var(--border-width);\n      }",
      "nu-progressbar::after {\n        content: '';\n        position: absolute;\n        left: 0;\n        width: calc(var(--value) * 100%);\n        top: 0;\n        bottom: 0;\n        background-color: transparent;\n        border-radius: var(--border-width);\n        background-image: linear-gradient(to bottom, rgba(var(--dark-color-rgb), 0), rgba(var(--dark-color-rgb), .2)), linear-gradient(135deg, rgba(var(--special-text-color-rgb),.4) 0%, rgba(var(--special-text-color-rgb),.4) 34%, var(--special-bg-color) 40%, var(--special-bg-color) 70%, rgba(var(--special-text-color-rgb),.4) 76%, rgba(var(--special-text-color-rgb),.4) 100%), linear-gradient(to bottom, var(--special-bg-color), var(--special-bg-color));\n        background-repeat: repeat;\n        background-size: 3em;\n        animation: nu-progressbar-animation calc(var(--progressbar-animation-time) * var(--transition-enabler)) linear infinite;\n      }",
      '@keyframes nu-progressbar-animation {\n        0% {\n          background-position: 0 0;\n        }\n        100% {\n          background-position: 3em 0;\n        }\n      }',
    ],
    template: '',
    behaviors: { progressbar: true },
  },
  {
    tag: 'nu-datepicker',
    type: 'element',
    styles: { display: 'grid', sizing: 'border', gap: '' },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-datepicker::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { datepicker: true },
  },
  {
    tag: 'nu-tooltip',
    type: 'element',
    styles: {
      display: 'none :tooltip[block]',
      sizing: 'content',
      shadow: '',
      padding: '.5x 1x',
      z: 'front',
      opacity: '1 :hidden[0]',
      transition: 'opacity',
      place: 'outside-top',
      drop: '',
      fill: '#bg',
      color: '#text',
      radius: '1r',
      border: '1bw outside',
      size: 'xs',
      interactive: 'no',
      text: 'b wrap',
      width: 'min-content initial 20rem',
      space: 'remove',
    },
    attrs: { theme: '' },
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-tooltip::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { fixate: true, tooltip: true },
  },
  {
    tag: 'nu-markdown',
    type: 'element',
    styles: { display: 'block', sizing: 'border', gap: '1x' },
    attrs: {},
    context: { 'attrs:list': { position: 'inside' } },
    role: '',
    contents: '',
    css: [
      'nu-markdown::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-markdown pre, nu-markdown textarea {\n        display: none;\n      }',
    ],
    template: '',
    behaviors: { markdown: true },
  },
  {
    tag: 'nu-md',
    type: 'element',
    styles: {
      display: 'inline-block',
      sizing: 'border',
      gap: '1x',
      text: 'baseline',
    },
    attrs: {},
    context: { 'attrs:list': { position: 'inside' } },
    role: '',
    contents: '',
    css: [
      'nu-md::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-md pre, nu-md textarea {\n        display: none;\n      }',
    ],
    template: '',
    behaviors: { markdown: 'inline' },
  },
  {
    tag: 'nu-slider',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      radius: 'round',
      fill: '#special',
      border: '1bw',
      text: 'v-middle',
      cursor: 'pointer :disabled[default]',
      mark: '.5em hover :disabled[n]',
      transition: 'shadow',
      expand: '.5em',
      orient: 'h',
      outline: 'n',
      box: 'y',
      filter:
        'n :disabled[saturate(0.33) contrast(0.88) opacity(var(--disabled-opacity))]',
    },
    attrs: {},
    context: {},
    role: 'slider',
    contents: '',
    css: [
      'nu-slider::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-slider {\n        touch-action: none;\n      }',
    ],
    template:
      '\n      <nu-circle\n        id="slider-thumb"\n        place="top left @local-rail-top @local-rail-left"\n        size="1.25em"\n        radius="round"\n        fill="#special-text"\n        border\n        shadow="1ow #shadow"\n        space=".375em + 1bw"\n        text="v-middle"\n        move="@local-rail-move-v @local-rail-move-h"\n        orient="h"\n        opacity="1"\n        outline="focus-outside visible"></nu-circle>\n    ',
    behaviors: { orient: 'dynamic', slider: true },
  },
  {
    tag: 'nu-slider2d',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      radius: '',
      fill: '#special-bg',
      border: '1bw',
      text: 'v-middle',
      cursor: 'pointer :disabled[default]',
      mark: '.5em hover :disabled[n]',
      transition: 'shadow',
      expand: '.5em',
      outline: 'n',
      box: 'y',
      height: '5em',
      filter:
        'n :disabled[saturate(0.33) contrast(0.88) opacity(var(--disabled-opacity))]',
      '@local-rail-move-h': '.5em - 1bw',
      '@local-rail-move-v': '-.5em - 1bw',
      '@local-rail-left': '@local-offset-x',
      '@local-rail-bottom': '@local-offset-y',
    },
    attrs: {},
    context: {},
    role: 'slider',
    contents: '',
    css: [
      'nu-slider2d::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-slider2d {\n        touch-action: none;\n      }',
    ],
    template:
      '\n      <nu-circle\n        id="slider-thumb"\n        place="bottom left @local-rail-bottom @local-rail-left"\n        size="1.25em"\n        radius="round"\n        fill="#special-text"\n        border\n        shadow="1ow #dark.50"\n        space=".375em + 1bw"\n        text="v-middle"\n        move="@local-rail-move-v @local-rail-move-h"\n        orient="h"\n        opacity="1"\n        outline="focus-outside visible"></nu-circle>\n    ',
    behaviors: { slider2d: true },
  },
  {
    tag: 'nu-switch',
    type: 'element',
    styles: {
      display: 'inline-block',
      sizing: 'content',
      radius: 'round',
      text: 'middle',
      transition: 'shadow',
      outline: 'focus visible',
      mark: ':focusable[hover]',
      cursor: 'pointer :disabled[default]',
      selectable: 'y',
      box: 'y',
      filter:
        'n :disabled[saturate(0.33) contrast(0.88) opacity(var(--disabled-opacity))]',
      'backdrop-filter': 'n :disabled[contrast(0.88)]',
      border: '1bw',
      inset:
        '0 :active[.5em #shadow.50] :pressed[0] :pressed:active[.5em #special-shadow.50]',
      width: '(@size * 2)',
      fill: 'bg :pressed[special-bg]',
      padding: '@circle-gap',
      '@size': '1em + @circle-gap',
      '@circle-gap': '1ow',
      '@circle-size': '@size',
      '@circle-offset': '0\n        :pressed[@size - 1bw]',
      '@circle-bg-color': '@special-bg-color :pressed[@special-text-color]',
      '@circle-shadow-color': '#shadow :pressed[#special-shadow.66]',
    },
    attrs: {},
    context: {},
    role: 'switch',
    contents: '',
    css: [
      'nu-switch::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-switch {\n        touch-action: manipulation;\n        -webkit-tap-highlight-color: var(--mark-color);\n      }',
      'nu-switch[disabled] {\n        pointer-events: none;\n      }',
      'nu-switch > a {\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        overflow: hidden;\n        cursor: inherit;\n        color: transparent;\n        text-decoration: inherit;\n        text-indent: -999rem;\n        white-space: nowrap;\n      }',
      'nu-switch > a:focus {\n        outline: none;\n      }',
    ],
    template:
      '\n      <nu-circle\n        size="@circle-size"\n        interactive="n"\n        transition="transform, fill"\n        move="@circle-offset"\n        fill="@circle-bg-color"\n        overflow="no"\n        border="0"\n        shadow="0 0 1ow #circle-shadow"></nu-circle>\n    ',
    behaviors: { control: true, action: true },
  },
  {
    tag: 'nu-checkbox',
    type: 'element',
    styles: {
      display: 'inline-grid',
      sizing: 'content',
      radius: '.25em',
      text: 'v-middle',
      transition: 'all',
      outline: '#clear :focus-visible[y]',
      mark: '.5em hover :disabled[n]',
      cursor: 'default',
      selectable: 'y',
      box: 'y',
      filter:
        'n :disabled[saturate(0.33) contrast(0.88) opacity(var(--disabled-opacity))]',
      'backdrop-filter': 'n :disabled[contrast(0.88)]',
      width: '1em + 2bw',
      height: '1em + 2bw',
      content: 'stretch',
      items: 'center',
      padding: '0',
      expand: '.5em',
      inset: 'n',
    },
    attrs: {},
    context: {},
    role: 'checkbox',
    contents: '',
    css: [
      'nu-checkbox::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-checkbox {\n        touch-action: manipulation;\n        -webkit-tap-highlight-color: var(--mark-color);\n      }',
      'nu-checkbox[disabled] {\n        pointer-events: none;\n      }',
      'nu-checkbox > a {\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        overflow: hidden;\n        cursor: inherit;\n        color: transparent;\n        text-decoration: inherit;\n        text-indent: -999rem;\n        white-space: nowrap;\n      }',
      'nu-checkbox > a:focus {\n        outline: none;\n      }',
    ],
    template:
      '\n      <nu-icon\n        name="check checkmark"\n        size="1em"\n        height="1em"\n        width="1em"\n        color="^ #clear :pressed[#special-text]"\n        fill="^ #bg :pressed[#special-bg]"\n        transition="fill, color, opacity, inset"\n        transition="opacity"\n        radius="@context-radius"\n        border="^ #text :pressed[#special-bg] :disabled.pressed[#text.50]"\n        inset="^ 0 :active[.5em] :pressed[0] :active:pressed[.5em]"></nu-icon>\n    ',
    behaviors: { control: true, action: true },
  },
  {
    tag: 'nu-radio',
    type: 'element',
    styles: {
      display: 'inline-block',
      sizing: 'content',
      radius: 'round',
      text: 'v-middle',
      transition: 'theme, radius, filter',
      outline: '#clear :focus-visible[y]',
      mark: 'n :focusable[.5em hover] :pressed.focusable[n]',
      cursor: 'default',
      selectable: 'y',
      box: 'y',
      filter:
        'n :disabled[saturate(0.33) contrast(0.88) opacity(var(--disabled-opacity))]',
      'backdrop-filter': 'n :disabled[contrast(0.88)]',
      width: '1em - 2bw',
      height: '1em - 2bw',
      border: '#text :pressed[#special-bg] :disabled.pressed[#text.50]',
      content: 'stretch',
      items: 'center',
      padding: '1ow',
      inset: '0 :active[.5em] :pressed[0]',
      fill: '#bg',
      expand: '.5em',
    },
    attrs: {},
    context: {},
    role: 'radio',
    contents: '',
    css: [
      'nu-radio::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-radio {\n        touch-action: manipulation;\n        -webkit-tap-highlight-color: var(--mark-color);\n      }',
      'nu-radio[disabled] {\n        pointer-events: none;\n      }',
      'nu-radio > a {\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        overflow: hidden;\n        cursor: inherit;\n        color: transparent;\n        text-decoration: inherit;\n        text-indent: -999rem;\n        white-space: nowrap;\n      }',
      'nu-radio > a:focus {\n        outline: none;\n      }',
    ],
    template:
      '\n      <nu-circle\n        fill="^host #clear :pressed[#special-bg]"\n        transition="fill"\n        size="1em - 2bw"\n        border="0"></nu-circle>\n    ',
    behaviors: { control: true, action: true },
  },
  {
    tag: 'nu-label',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      text: 'sb',
      cursor: 'default',
      transition: 'theme, transform',
    },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-label::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { label: true },
  },
  {
    tag: 'nu-form',
    type: 'element',
    styles: { display: 'block', sizing: 'border', flow: 'column', gap: '2x' },
    attrs: {},
    context: {},
    role: 'form',
    contents: '',
    css: [
      'nu-form::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { form: true },
  },
  {
    tag: 'nu-check',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      opacity: ':invalid[1] 0',
      interactive: ':invalid[yes] no',
      size: 'sm',
      text: 'b',
      transition: 'opacity, height',
      color: '#danger',
    },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-check::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { validator: true },
  },
  {
    tag: 'nu-popup',
    type: 'element',
    styles: {
      display: 'none :popup[block]',
      sizing: 'content',
      flow: 'column',
      box: 'y',
      padding: '',
      fill: '#bg :clear[#clear]',
      color: '#text :clear[current]',
      border: '1bw outside',
      radius: '1r',
      transition: 'opacity, transform',
      shadow: '',
      z: 'front',
      opacity: ':hidden[0] 1',
      interactive: 'yes :hidden[no]',
      origin: 'top',
      width: '100% 100vw :drop[@fixate-width min-content 100vw]',
      text: 'n wrap',
      cursor: 'default',
      place: 'outside-bottom .5x 0',
      drop: '',
      selectable: 'y',
    },
    attrs: { effect: '' },
    context: {},
    role: 'dialog',
    contents: '',
    css: [
      'nu-popup::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { fixate: true, popup: true },
  },
  {
    tag: 'nu-dateinput',
    type: 'element',
    styles: {
      display: 'inline-grid',
      sizing: 'border',
      radius: '',
      text: 'sb nowrap',
      transition: 'theme, radius, filter',
      outline: '#clear :focus-visible[y]',
      mark: 'n :focusable[hover]',
      cursor: 'pointer :disabled[default]',
      selectable: 'y',
      box: 'y',
      filter:
        'n :disabled[saturate(0.33) contrast(0.88) opacity(var(--disabled-opacity))]',
      'backdrop-filter': 'n :disabled[contrast(0.88)]',
      padding: '1x .5x 1x 1x',
      border:
        '1bw :clear[hidden] :hover[1bw] :clear:hover[#mark] :special[#clear] :hover:special[#clear]',
      flow: 'column',
      gap: '1x',
      content: 'stretch',
      items: 'center stretch',
      inset:
        '#clear :active[#shadow.50] :active:special[#special-shadow.50] :pressed[y] :pressed:special[#special-shadow] :active:pressed[#shadow.50] :active:special[#special-shadow.50] :active:pressed:special[#special-shadow.50]',
      fill:
        '#bg :disabled[#bg] :special.disabled[#special-bg] :clear[#clear] :clear:disabled[#clear]',
      color:
        '#text :clear[#special] :special[#special-text] :special:clear[#special-text]',
      height: 'min (1lh + 2b + 2x)',
    },
    attrs: {},
    context: {},
    role: 'button',
    contents: '',
    css: [
      'nu-dateinput::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-dateinput {\n        touch-action: manipulation;\n        -webkit-tap-highlight-color: var(--mark-color);\n      }',
      'nu-dateinput[disabled] {\n        pointer-events: none;\n      }',
      'nu-dateinput > a {\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        overflow: hidden;\n        cursor: inherit;\n        color: transparent;\n        text-decoration: inherit;\n        text-indent: -999rem;\n        white-space: nowrap;\n      }',
      'nu-dateinput > a:focus {\n        outline: none;\n      }',
      'nu-dateinput[special] {\n        --shadow-color: var(--special-shadow-color);\n        --shadow-color-rgb: var(--special-shadow-color-rgb);\n      }',
      'nu-dateinput[special] > :not([theme]) {\n        --text-soft-color: var(--special-text-color);\n        --text-contrast-color: var(--special-text-color);\n        --text-color: var(--special-text-color);\n        --special-color: var(--special-text-color);\n        --mark-color: var(--special-mark-color);\n      }',
    ],
    template: '',
    behaviors: { control: true, action: true, dateinput: true },
  },
  {
    tag: 'nu-value',
    type: 'element',
    styles: {
      display: 'inline-block',
      sizing: 'border',
      filter:
        'n :placeholder[saturate(0.33) contrast(0.78) opacity(var(--disabled-opacity))]',
    },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-value::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
    ],
    template: '',
    behaviors: { value: true },
  },
  {
    tag: 'nu-ph',
    type: 'element',
    styles: {
      display: 'block',
      sizing: 'border',
      fill: '#special-bg',
      height: '1fs 1fs',
      width: 'auto :circle[1lh]',
      radius: '.5r :circle[round]',
      interactive: 'n :disabled[y]',
      filter: 'saturate(0.5) contrast(0.88)',
      opacity: 0.18,
      transition: 'color',
    },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-ph::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-ph:not([static]) {\n        background-image: linear-gradient(135deg, rgba(var(--special-text-color-rgb), .5) 0%, rgba(var(--special-text-color-rgb), .5) 5%, rgba(var(--special-text-color-rgb), 0) 35%, var(--special-bg-color) 50%, rgba(var(--special-bg-color-rgb), 0) 65%, rgba(var(--special-text-color-rgb), .5) 95%, rgba(var(--special-text-color-rgb), .5) 100%);\n        background-repeat: repeat;\n        background-size: var(--ph-animation-size);\n        animation: nu-ph-animation calc(var(--ph-animation-time) * var(--transition-enabler)) linear infinite;\n      }',
      '@keyframes nu-ph-animation {\n        0% {\n          background-position: 0 0;\n        }\n        100% {\n          background-position: var(--ph-animation-size) 0;\n        }\n      }',
    ],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-spin',
    type: 'element',
    styles: {
      display: 'inline-flex',
      sizing: 'border',
      overflow: 'no',
      items: 'center',
      color: '#text :special[#special]',
      border: null,
      fill: null,
      interactive: 'n',
      opacity: '1 :hidden[0]',
      width: '1em :hidden[0em]',
      height: '1em',
      transition: 'color, width, opacity',
    },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: [
      'nu-spin::selection {\n        background: rgba(var(--main-outline-color-rgb, var(--outline-color-rgb)), .5);\n      }',
      'nu-spin {\n        animation: nu-spin-animation calc(var(--spin-animation-time) * var(--transition-enabler)) linear infinite;\n      }',
      'nu-spin > svg {\n        min-width: 1em;\n        min-height: 1em;\n      }',
      '@keyframes nu-spin-animation {\n        0% {\n          transform: rotate(0turn);\n        }\n        100% {\n          transform: rotate(1turn);\n        }\n      },',
    ],
    template:
      '<svg viewBox="0 0 1024 1024" focusable="false" data-icon="loading" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z"></path></svg>',
    behaviors: {},
  },
  {
    tag: 'nu-theme',
    type: 'definition',
    styles: { display: 'none' },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: ['nu-theme { display: none !important; }'],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-attrs',
    type: 'definition',
    styles: { display: 'none' },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: ['nu-attrs { display: none !important; }'],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-props',
    type: 'definition',
    styles: { display: 'none' },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: ['nu-props { display: none !important; }'],
    template: '',
    behaviors: {},
  },
  {
    tag: 'nu-base',
    type: 'definition',
    styles: { display: 'none' },
    attrs: {},
    context: {},
    role: '',
    contents: '',
    css: ['nu-base { display: none !important; }'],
    template: '',
    behaviors: {},
  },
];
