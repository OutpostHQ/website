/**
 * Add `"type": "module"` to `package.json` to run this script.
 */

import fs from 'fs';
import path from 'path';
import { ELEMENTS, STYLES, BEHAVIORS } from '../helpers/config.js';

function createFilter(type) {
  return (file) => {
    const filename = path.join('content', 'reference', type, file);

    const content = fs.readFileSync(filename, 'utf-8');

    return !content.includes('autoGenerated: true');
  };
}

const existElementsFiles = fs
  .readdirSync(path.join('content', 'reference', 'elements'))
  .filter(createFilter('elements'));
const existDefinitionsFiles = fs
  .readdirSync(path.join('content', 'reference', 'definitions'))
  .filter(createFilter('definitions'));
const existFiles = existDefinitionsFiles
  .concat(existElementsFiles)
  .map((file) => file.replace('.md', ''));
const existStyleFiles = fs
  .readdirSync(path.join('content', 'reference', 'styles'))
  .filter(createFilter('styles'))
  .map((file) => file.replace('.md', ''));
const existBehaviorFiles = fs
  .readdirSync(path.join('content', 'reference', 'behaviors'))
  .filter(createFilter('behaviors'))
  .map((file) => file.replace('.md', ''));

ELEMENTS.forEach((el) => {
  if (existFiles.includes(el.tag)) {
    return;
  }

  const filename = path.join(
    'content',
    'reference',
    el.type === 'definition' ? 'definitions' : 'elements',
    `${el.tag}.md`
  );

  fs.writeFileSync(
    filename,
    `---
title: ${el.tag}
type: element
description: Content page. Has no description yet.
autoGenerated: true
---

Yet to be documented`,
    'utf-8'
  );

  /* eslint-disable-next-line */
  console.log('Generated:', filename);
});

STYLES.forEach((name) => {
  if (existStyleFiles.includes(name)) {
    return;
  }

  const filename = path.join('content', 'reference', 'styles', `${name}.md`);

  fs.writeFileSync(
    filename,
    `---
title: ${name}
type: style attribute
description: Content page. Has no description yet.
autoGenerated: true
---

Yet to be documented`,
    'utf-8'
  );

  /* eslint-disable-next-line */
  console.log('Generated:', filename);
});

BEHAVIORS.forEach((name) => {
  if (existBehaviorFiles.includes(name)) {
    return;
  }

  const filename = path.join('content', 'reference', 'behaviors', `${name}.md`);

  fs.writeFileSync(
    filename,
    `---
title: ${name}
type: behavior
description: Content page. Has no description yet.
autoGenerated: true
---

Yet to be documented`,
    'utf-8'
  );

  /* eslint-disable-next-line */
  console.log('Generated:', filename);
});
